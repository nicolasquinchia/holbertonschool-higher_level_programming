#2-matrix_divided

===============================
   Tests using Matrix Divided
===============================

This function divides all elements of a matrix
    Paramethers:
        matrix: list of lists of integers or floats
        div: number that divide all elements of a matrix
    Errors:
        TypeError: if matrix is not list
        TypeError: if the elements of the matrix are not 
        a list
        TypeError: if any elements of the matrix is not
        a integer or float
        TypeError: if each row of the matrix is not the
        same size
        ZeroDivisionError: div canâ€™t be equal to 0
    Returns:
        A new matrix with all elements divided by div
    """
	Import `matrix_divided` from the file `2-matrix_divided.py`:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	Numbers
	=======

	#1: Matrix with integers divided by a integer:
		>>> matrix_1 = [[1, 2, 3], [4, 5, 6]]
		>>> matrix_divided(matrix_1, 3)
		[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	#2: Mixed Matrix divided by a float:
		>>> matrix_divided(matrix_1, 2.3)
		[[0.43, 0.87, 1.3], [1.74, 2.17, 2.61]]

	#3: Negative Values in Matrix divided by a Negative float:
		>>> matrix_2 = [[-1, 2, -3], [4, -5, 6]]
		>>> matrix_divided(matrix_2, -1.5)
		[[0.67, -1.33, 2.0], [-2.67, 3.33, -4.0]]

	#4: Matrix divided by Zero:
		>>> matrix_divided(matrix_1, 0)
		Traceback (most recent call last):
		  ...
		ZeroDivisionError: division by zero

	#5: Empty Matrix:
		>>> matrix_divided([[]], 4)
		Traceback (most recent call last):
		  ...
		TypeError: matrix must be a matrix (list of lists) of integers/floats

	#6: Empty Row:
		>>> matrix_3 = [[1, 2, 3], [], [4, 5, 6]]
		>>> matrix_divided(matrix_3, 2)
		Traceback (most recent call last):
		  ...
		TypeError: matrix must be a matrix (list of lists) of integers/floats

	#7: Diferent len to each Row:
		>>> matrix_4 = [[1, 2, 3], [5, 6], [4, 5, 6]]
		>>> matrix_divided(matrix_4, 3)
		Traceback (most recent call last):
		  ...
		TypeError: Each row of the matrix must have the same size

	#8: Matrix as a Number:
		>>> matrix_divided(10, 3)
		Traceback (most recent call last):
		  ...
		TypeError: matrix must be a matrix (list of lists) of integers/floats

	#9: Matrix with one element:
		>>> matrix_divided([[15]], 3)
		[[5.0]]

	#10: One Element of Matrix is a Tuple:
		>>> matrix_5 = [[1, 2, 3], (4, 5, 6)]
		>>> matrix_divided(matrix_5, 3)
		Traceback (most recent call last):
		  ...
		TypeError: matrix must be a matrix (list of lists) of integers/floats

	Non - Numbers
	=======

	#11: Elementes of Matrix are Infinities and NaN:
		>>> matrix_6 = [[1, float('inf'), 3], [float('NaN'), 5, 6]]
		>>> matrix_divided(matrix_6, 3)
		[[0.33, inf, 1.0], [nan, 1.67, 2.0]]

	#12: Matrix divided by a infinity:
		>>> matrix_divided(matrix_1, float('inf'))
		[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

	#13: Matrix divided by NaN:
		>>> matrix_divided(matrix_1, float('NaN'))
		[[nan, nan, nan], [nan, nan, nan]]

	#14: Matrix and Div are NaN/Infinity:
		>>> matrix_divided(matrix_6, float('inf'))
		[[0.0, nan, 0.0], [nan, 0.0, 0.0]]

	#15: Matrix have Str elements:
		>>> matrix_7 = [[1, "Doom", 3], [4, 5, "Slayer"]]
		>>> matrix_divided(matrix_7, 3)
		Traceback (most recent call last):
		  ...
		TypeError: matrix must be a matrix (list of lists) of integers/floats

	#16: Div is a String:
		>>> matrix_divided(matrix_1, "BFG")
		Traceback (most recent call last):
		  ...
		TypeError: div must be a number