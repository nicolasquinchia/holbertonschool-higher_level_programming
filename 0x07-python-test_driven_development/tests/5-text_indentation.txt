#5-text_indentation

===============================
  Tests using text_indentation
===============================

    Print text with new lines on specific Characters

    Arguments:
        text {[str]} -- string to print

    Raises:
        TypeError: text must be a string

    Import `text_indentation` from the file `5-text_indentation.py`:
    >>> text_indentation = __import__('5-text_indentation').text_indentation

    Tests:
    =======

    #1: Text is a integer:
        >>> text_indentation(3)
        Traceback (most recent call last):
          ...
        TypeError: text must be a string
    
    #2: Printable Text str paramether:
        >>> text = "text... text?? .text ?text :text"
        >>> text_indentation(text)
        text.
        <BLANKLINE>
        .
        <BLANKLINE>
        .
        <BLANKLINE>
        text?
        <BLANKLINE>
        ?
        <BLANKLINE>
        .
        <BLANKLINE>
        text ?
        <BLANKLINE>
        text :
        <BLANKLINE>
        text

    #3: Empty text:
        >>> text_indentation("")

    #4: Text on paramether:
        >>> text_indentation("Monica")
        Monica

    #5: Text on paramether:
        >>> text_indentation("Hello.?beautiful:.world!")
        Hello.
        <BLANKLINE>
        ?
        <BLANKLINE>
        beautiful:
        <BLANKLINE>
        .
        <BLANKLINE>
        world!

    #6: Without paramethers:
        >>> text_indentation()
        Traceback (most recent call last):
          ...
        TypeError: text_indentation() missing 1 required positional argument: 'text'